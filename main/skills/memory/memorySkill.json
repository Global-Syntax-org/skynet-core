{
  "skillId": "memorySkill",
  "name": "Enhanced Memory Management Skill",
  "description": "Advanced memory management with embeddings, persistent storage, and semantic search",
  "version": "2.0.0",
  "category": "cognitive",
  "priority": 95,
  "dependencies": ["databaseSkill"],
  "capabilities": [
    "persistent_storage",
    "semantic_search",
    "embedding_generation",
    "context_management",
    "memory_compression",
    "knowledge_graphs",
    "temporal_storage"
  ],
  "configuration": {
    "storage_backend": "sqlite",
    "embedding_model": "sentence-transformers/all-MiniLM-L6-v2",
    "max_context_length": 4096,
    "compression_enabled": true,
    "auto_cleanup": true,
    "retention_days": 90
  },
  "functions": [
    {
      "name": "store_memory",
      "description": "Store information in memory with semantic embeddings",
      "parameters": {
        "content": {
          "type": "string",
          "description": "Content to store in memory",
          "required": true
        },
        "memory_type": {
          "type": "string",
          "description": "Type of memory",
          "enum": ["fact", "conversation", "task", "knowledge", "experience"],
          "default": "fact"
        },
        "metadata": {
          "type": "object",
          "description": "Additional metadata for the memory",
          "default": {}
        },
        "tags": {
          "type": "array",
          "description": "Tags for categorization",
          "default": []
        },
        "importance": {
          "type": "integer",
          "description": "Importance level (1-10)",
          "default": 5
        }
      },
      "returns": {
        "type": "object",
        "properties": {
          "success": {"type": "boolean"},
          "memory_id": {"type": "string"},
          "embedding_generated": {"type": "boolean"},
          "error": {"type": "string"}
        }
      }
    },
    {
      "name": "retrieve_memories",
      "description": "Retrieve memories based on semantic similarity or filters",
      "parameters": {
        "query": {
          "type": "string",
          "description": "Search query for semantic retrieval",
          "required": true
        },
        "memory_types": {
          "type": "array",
          "description": "Filter by memory types",
          "default": []
        },
        "tags": {
          "type": "array",
          "description": "Filter by tags",
          "default": []
        },
        "limit": {
          "type": "integer",
          "description": "Maximum number of memories to retrieve",
          "default": 10
        },
        "similarity_threshold": {
          "type": "number",
          "description": "Minimum similarity score (0-1)",
          "default": 0.5
        }
      },
      "returns": {
        "type": "object",
        "properties": {
          "success": {"type": "boolean"},
          "memories": {"type": "array"},
          "total_found": {"type": "integer"},
          "search_time": {"type": "number"},
          "error": {"type": "string"}
        }
      }
    },
    {
      "name": "update_memory",
      "description": "Update existing memory with new content or metadata",
      "parameters": {
        "memory_id": {
          "type": "string",
          "description": "ID of memory to update",
          "required": true
        },
        "content": {
          "type": "string",
          "description": "New content (optional)",
          "default": null
        },
        "metadata": {
          "type": "object",
          "description": "Updated metadata",
          "default": {}
        },
        "tags": {
          "type": "array",
          "description": "Updated tags",
          "default": null
        },
        "importance": {
          "type": "integer",
          "description": "Updated importance level",
          "default": null
        }
      },
      "returns": {
        "type": "object",
        "properties": {
          "success": {"type": "boolean"},
          "updated": {"type": "boolean"},
          "embedding_updated": {"type": "boolean"},
          "error": {"type": "string"}
        }
      }
    },
    {
      "name": "compress_memories",
      "description": "Compress and summarize old memories to save space",
      "parameters": {
        "older_than_days": {
          "type": "integer",
          "description": "Compress memories older than X days",
          "default": 30
        },
        "compression_ratio": {
          "type": "number",
          "description": "Target compression ratio (0-1)",
          "default": 0.5
        },
        "preserve_important": {
          "type": "boolean",
          "description": "Preserve high-importance memories",
          "default": true
        }
      },
      "returns": {
        "type": "object",
        "properties": {
          "success": {"type": "boolean"},
          "compressed_count": {"type": "integer"},
          "space_saved": {"type": "integer"},
          "error": {"type": "string"}
        }
      }
    },
    {
      "name": "create_knowledge_graph",
      "description": "Create knowledge graph from stored memories",
      "parameters": {
        "memory_types": {
          "type": "array",
          "description": "Memory types to include",
          "default": ["fact", "knowledge"]
        },
        "min_connections": {
          "type": "integer",
          "description": "Minimum connections for inclusion",
          "default": 2
        },
        "similarity_threshold": {
          "type": "number",
          "description": "Connection similarity threshold",
          "default": 0.7
        }
      },
      "returns": {
        "type": "object",
        "properties": {
          "success": {"type": "boolean"},
          "graph_id": {"type": "string"},
          "nodes_count": {"type": "integer"},
          "edges_count": {"type": "integer"},
          "error": {"type": "string"}
        }
      }
    }
  ],
  "signals": {
    "memory_stored": {
      "description": "Emitted when new memory is stored",
      "data": {"memory_id": "string", "memory_type": "string", "importance": "integer"}
    },
    "memory_retrieved": {
      "description": "Emitted when memories are retrieved",
      "data": {"query": "string", "results_count": "integer", "search_time": "number"}
    },
    "memory_updated": {
      "description": "Emitted when memory is updated",
      "data": {"memory_id": "string", "changes": "array"}
    },
    "compression_completed": {
      "description": "Emitted when memory compression completes",
      "data": {"compressed_count": "integer", "space_saved": "integer"}
    },
    "knowledge_graph_created": {
      "description": "Emitted when knowledge graph is created",
      "data": {"graph_id": "string", "nodes_count": "integer", "edges_count": "integer"}
    },
    "memory_error": {
      "description": "Emitted when memory operation fails",
      "data": {"operation": "string", "error": "string"}
    }
  },
  "routing": {
    "fallback_enabled": true,
    "cache_responses": true,
    "cache_ttl_seconds": 600,
    "rate_limiting": {
      "enabled": true,
      "requests_per_minute": 300
    }
  },
  "storage": {
    "backend": "sqlite",
    "encryption": true,
    "compression": true,
    "backup_enabled": true,
    "auto_cleanup": true
  },
  "metadata": {
    "author": "Skynet Lite Phase 2 Team",
    "created": "2025-08-22T00:00:00Z",
    "updated": "2025-08-22T00:00:00Z",
    "tags": ["memory", "embeddings", "semantic-search", "knowledge-graph", "ai"],
    "documentation_url": "https://docs.skynet-lite.ai/skills/memory",
    "examples": [
      {
        "name": "Store Knowledge",
        "description": "Store a piece of knowledge with embeddings",
        "code": "store_memory('Python is a programming language', memory_type='fact', importance=8)"
      },
      {
        "name": "Semantic Search",
        "description": "Search for related memories",
        "code": "retrieve_memories('programming languages', similarity_threshold=0.7)"
      }
    ]
  }
}
